# This file is deprecated as per GLEP 56 in favor of metadata.xml.
# Please add your descriptions to your package's metadata.xml ONLY.
# * generated automatically using pmaint *

dev-libs/imath:large-stack - Enables code to take advantage of large stack support
dev-libs/qtnproperty:demo - Build and install the demo program.
games-util/simulationcraft:gui - Builds the Qt5 GUI
media-gfx/freecad:addonmgr - Build the addon manager module for automatic handling of 3rd party addons
media-gfx/freecad:cloud - Build the Cloud workbench, to access cloud providers (mostly Amazon S3).
media-gfx/freecad:designer - Build and install the Qt designer plugin, so the FreeCAD widgets can be used from within designer.
media-gfx/freecad:fem - Build the FEM module and workbench which provides Finite Element Analysis (FEA) workflows
media-gfx/freecad:headless - Build FreeCAD without a GUI, usable for server-side instances. The Python modules are still available, without their GUI parts though.
media-gfx/freecad:idf - Build the IDF module to provide file exchange capabilities with IDF files
media-gfx/freecad:image - Build the image module and workbench for working with bitmap images
media-gfx/freecad:inspection - Build the inspection workbench which gives you specific tools for examination of shapes (experimental)
media-gfx/freecad:material - Build the material module and workbench to work with materials
media-gfx/freecad:netgen - Enable the Netgen mesher through media-gfx/netgen with the FEM workbench
media-gfx/freecad:openscad - Build the OpenSCAD module for interoperability with OpenSCAD and repairing Constructive Solid Geometry (CSG) history
media-gfx/freecad:part-design - Build the part design module and workbench for build part shapes from sketches
media-gfx/freecad:path - Build the path module and workbench to procude G-Code instructions for CNC
media-gfx/freecad:pcl - Use external sci-libs/pcl for point clouds support.
media-gfx/freecad:points - Build the points module and workbench for working with point clouds
media-gfx/freecad:raytracing - Build the raytracing module and workbench for raytracing and rendering
media-gfx/freecad:robot - Build the robot module and workbench for studying robot movements
media-gfx/freecad:show - Build the show module, a helper module for visibility automation
media-gfx/freecad:surface - Build the surface module and workbench
media-gfx/freecad:techdraw - Build the techdraw module and workbench, a more advanced and feature-rich successor of the drawing workbench
media-gfx/freecad:tux - Build the Tux module
media-gfx/netgen:opencascade - Enable OpenCASCADE support
media-gfx/vsgExamples:source - Install source files of example programs as well
media-libs/draco:compat - Build in compatibility mode.
media-libs/draco:gltf - Compile with support for glTF (GL Transmission Format) from The Khronos Group Inc.
media-libs/openexr:large-stack - Enable code to take advantage of large stack support.
media-libs/openexr:utils - Build several utility binaries for verifying and manipulating EXR files.
media-libs/opensubdiv:cuda - Enable NVIDIA CUDA Toolkit support through dev-util/nvidia-cuda-toolkit
media-libs/opensubdiv:opencl - Enable OpenCL support through virtual/opencl
media-libs/opensubdiv:ptex - Adds support for faster per-face texture mapping through media-libs/ptex
media-libs/opensubdiv:tbb - Enable multithreading with the Intel Threads Building Blocks through dev-cpp/tbb
media-libs/opensubdiv:tutorials - Install the tutorials
media-libs/vsgFramework:assimp - Use media-libs/assimp with vsgXchange
media-libs/vsgXchange:assimp - Support various 3D file formats using media-libs/assimp
media-libs/vsgXchange:freetype - Enable font conversion through media-libs/freetype
media-libs/vsgXchange:gdal - Support GIS related formats using sci-libs/gdal
media-libs/vsgXchange:openscenegraph - Support data exchange with dev-games/openscenegraph
